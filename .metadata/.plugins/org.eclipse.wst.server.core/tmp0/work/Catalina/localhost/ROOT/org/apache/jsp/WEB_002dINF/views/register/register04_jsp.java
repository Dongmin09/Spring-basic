/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.83
 * Generated at: 2022-10-31 07:18:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.register;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register04_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1666247059660L));
    _jspx_dependants.put("jar:file:/C:/eclipse-jee-2020-06-R-win32-x86_64/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springProj/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/jquery.min.js\"></script>\r\n");
      out.write("<<script type=\"text/javascript\">\n");
      out.write("$(function(){\r\n");
      out.write("		$(\"#aSubmit\").on(\"click\",function(){\r\n");
      out.write("			$(\"#frm\").submit();\r\n");
      out.write("		});\r\n");
      out.write("});\n");
      out.write("</script>\r\n");
      out.write("<div class=\"card shadow mb-4\">\r\n");
      out.write("   <!-- Card Header - Accordion -->\r\n");
      out.write("   <a href=\"#collapseCardExample\" class=\"d-block card-header py-3\"\r\n");
      out.write("      data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\"\r\n");
      out.write("      aria-controls=\"collapseCardExample\">\r\n");
      out.write("      <h6 class=\"m-0 font-weight-bold text-primary\">Collapsable Card\r\n");
      out.write("         Example</h6>\r\n");
      out.write("   </a>\r\n");
      out.write("   <!-- Card Content - Collapse -->\r\n");
      out.write("   <div class=\"collapse show\" id=\"collapseCardExample\">\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("         <form id=\"frm\" action=\"/register/register04\" method=\"post\">\r\n");
      out.write("         <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"exampleFormControlInput1\" class=\"form-label\">userId\r\n");
      out.write("            </label> <input type=\"text\" class=\"form-control\" name=\"userId\" id=\"userId\"\r\n");
      out.write("               placeholder=\"userId\">\r\n");
      out.write("         </div>\r\n");
      out.write("         <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"exampleFormControlInput1\" class=\"form-label\">password\r\n");
      out.write("            </label> <input type=\"text\" class=\"form-control\" name=\"password\"\r\n");
      out.write("               id=\"password\" placeholder=\"password\">\r\n");
      out.write("         </div>\r\n");
      out.write("         <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"exampleFormControlInput1\" class=\"form-label\">coin\r\n");
      out.write("            </label> <input type=\"text\" class=\"form-control\" name=\"coin\" id=\"coin\"\r\n");
      out.write("               placeholder=\"coin\">\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"mb-3\">\r\n");
      out.write("            <a href=\"#\" id=\"aSubmit\" class=\"btn btn-primary btn-icon-split\">\r\n");
      out.write("               <span class=\"icon text-white-50\"> <i class=\"fas fa-flag\"></i>\r\n");
      out.write("            </span> <span class=\"text\">요청파라미터Go</span>\r\n");
      out.write("            </a>\r\n");
      out.write("         </div>\r\n");
      out.write("         </form>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
